apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: rgrback
  name: rgrback
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rgrback
  template:
    metadata:
      labels:
        io.kompose.network/wallet-my-network: "true"
        io.kompose.service: rgrback
    spec:
      containers:
        - name: rgrback
          image: "image-registry.openshift-image-registry.svc:5000/tcelor-dev/rgrback:latest"
          ports:
            - containerPort: 9080
              protocol: TCP
      restartPolicy: Always

---

apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    io.kompose.service: rgrback
  name: rgrback
spec:
  lookupPolicy:
    local: false
  tags:
    - from:
        kind: DockerImage
        name: rgrback:latest
      name: latest
      referencePolicy:
        type: ""

---

apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: rgrback
  name: rgrback
spec:
  ports:
    - name: "9080"
      port: 9080
      targetPort: 9080
  selector:
    io.kompose.service: rgrback

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    io.kompose.service: rgrback
  name: rgrback-route
spec:
  to:
    kind: Service
    name: rgrback
  port:
    targetPort: "9080"
  wildcardPolicy: None


apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: rgrfront
  name: rgrfront
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rgrfront
  template:
    metadata:
      labels:
        io.kompose.network/wallet-my-network: "true"
        io.kompose.service: rgrfront
    spec:
      containers:
        - name: rgrfront
          image: "image-registry.openshift-image-registry.svc:5000/tcelor-dev/rgrfront:latest" # Corrected image reference
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: BACKEND_URL
              value: "http://rgrback-route" # Service endpoint of rgrback
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 30
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: rgrfront
  name: rgrfront
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: rgrfront

---

apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    io.kompose.service: rgrfront
  name: rgrfront-route
spec:
  to:
    kind: Service
    name: rgrfront
    weight: 100
  port:
    targetPort: "8080"
  wildcardPolicy: None

---

apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    io.kompose.service: rgrfront
  name: rgrfront
spec:
  lookupPolicy:
    local: false
  tags:
    - from:
        kind: DockerImage
        name: rgrfront:latest
      name: latest
      referencePolicy:
        type: ""
